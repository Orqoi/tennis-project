TieBreakGame = WhoServe1st; (Player1Serve [] Player2Serve);
WhoServe1st = []i:{f_de_ct,n_de_ct}@ TossCoin{turn = i} -> Skip;
Player1Serve = [won == na && turn == f_de_ct ]FedReady_DeCt -> De_Ply1Serve [] [won == na && turn == f_ad_ct] FedReady_AdCt -> Ad_Ply1Serve;
Player2Serve = [won == na && turn == n_de_ct]NadReady_DeCt -> De_Ply2Serve [] [ won == na && turn == n_ad_ct] NadReady_AdCt -> Ad_Ply2Serve;
NextPt = Player1Serve [] Player2Serve [] ([won != na] GameOver -> Skip);

De_Ply1Serve = pcase {                             
			p0: ServeT_in{ball=5} -> Ply2_BackHandR  
			p1: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p2: ServeWide_in{ball=6} -> Ply2_ForeHandR 
			p3: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p4: Serve_err{ball=9} -> De_Ply1Serve_2nd}; 

De_Ply1Serve_2nd = pcase {                 //1st serve is out
			p5: ServeT_in{ball=5} -> Ply2_BackHandR  
			p6: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p7: ServeWide_in{ball=6} -> Ply2_ForeHandR 
			p8: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p9: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };

Ad_Ply1Serve = pcase {
			p10: ServeT_in{ball=5} -> Ply2_ForeHandR  
			p11: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p12: ServeWide_in{ball=4} -> Ply2_BackHandR
			p13: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p14: Serve_err{ball=9} -> Ad_Ply1Serve_2nd}; 

Ad_Ply1Serve_2nd = pcase {                 //1st serve is out
			p15: ServeT_in{ball=5} -> Ply2_ForeHandR  
			p16: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p17: ServeWide_in{ball=4} -> Ply2_BackHandR
			p18: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p19: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };    
     		 
Ply1_ForeHandR = ifa (turn == n_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
		 pcase {
			p20: FH_CrossCourt{ball=6} -> Ply2_de_stroke
			p21: FH_DownLine{ball=4} -> Ply2_ad_stroke
			p22: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p23: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p24: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p25: FH_InsideOut{ball =4} -> Ply2_ad_stroke
			p26: FH_InsideIn{ball=6} -> Ply2_de_stroke
			p27: FH_CrossCourt{ball=6} -> Ply2_de_stroke
			p28: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p29: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p30: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

Ply1_BackHandR = ifa (turn == n_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
		 pcase {
			p31: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
			p32: BH_InsideIn{ball=4} -> Ply2_ad_stroke
			p33: BH_InsideOut{ball=6} -> Ply2_de_stroke
			p34: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p35: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p36: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p37: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
			p38: BH_DownLine{ball=6} -> Ply2_de_stroke
			p39: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p40: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p41: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

// deuce stroke is when player1 hit position is 1
Ply1_de_stroke = pcase{
			p42: FH_Crosscourt{ball=6} -> Ply2_de_stroke
			p43: FH_Crosscourt{ball=6} -> Ply2_de_smash
			p44: FH_Downline{ball=4} -> Ply2_ad_stroke
			p45: FH_Downline{ball=4} -> Ply2_ad_smash
			p46: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p47: FH_DownMid{ball=5} -> Ply2_mid_smash
			p48: BH_InsideIn{ball=4} -> Ply2_ad_stroke
			p49: BH_InsideIn{ball=4} -> Ply2_ad_smash
			p50: BH_InsideOut{ball=6} -> Ply2_de_stroke
			p51: BH_InsideOut{ball=6} -> Ply2_de_smash
			p52: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p53: BH_DownMid{ball=5} -> Ply2_mid_smash
			p54: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p55: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};
	
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke = pcase{
			p56: FH_InsideOut{ball=4} -> Ply2_ad_stroke
			p57: FH_InsideOut{ball=4} -> Ply2_ad_smash
			p58: FH_Crosscourt{ball=6} -> Ply2_de_stroke
			p59: FH_Crosscourt{ball=6} -> Ply2_de_smash
			p60: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p61: FH_DownMid{ball=5} -> Ply2_mid_smash
			p62: BH_InsideOut{ball=6} -> Ply2_de_stroke
			p63: BH_InsideOut{ball=6} -> Ply2_de_smash
			p64: BH_Crosscourt{ball=4} -> Ply2_ad_stroke
			p65: BH_Crosscourt{ball=4} -> Ply2_ad_smash
			p66: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p67: BH_DownMid{ball=5} -> Ply2_mid_smash
			p68: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p69: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt    
	};


// ad stroke is when player1 hit position is 3
Ply1_ad_stroke = pcase{
			p70: FH_InsideOut{ball=4} -> Ply2_ad_stroke
			p71: FH_InsideOut{ball=4} -> Ply2_ad_smash
			p72: FH_InsideIn{ball=6} -> Ply2_de_stroke
			p73: FH_InsideIn{ball=6} -> Ply2_de_smash
			p74: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p75: FH_DownMid{ball=5} -> Ply2_mid_smash
			p76: BH_Crosscourt{ball=4} -> Ply2_ad_stroke
			p77: BH_Crosscourt{ball=4} -> Ply2_ad_smash
			p78: BH_Downline{ball=6} -> Ply2_de_stroke
			p79: BH_Downline{ball=6} -> Ply2_de_smash
			p80: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p81: BH_DownMid{ball=5} -> Ply2_mid_smash
			p82: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p83: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};


De_Ply2Serve = pcase {
			p84: ServeT_in{ball=2} -> Ply1_BackHandR
			p85: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p86: ServeWide_in{ball=1} -> Ply1_ForeHandR
			p87: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p88: Serve_err{ball=9} -> De_Ply2Serve_2nd}; 

De_Ply2Serve_2nd = pcase {                 //1st serve is out
			p89: ServeT_in{ball=2} -> Ply1_BackHandR
			p90: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p91: ServeWide_in{ball=1} -> Ply1_ForeHandR
			p92: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p93: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
Ad_Ply2Serve = pcase {
			p94: ServeT_in{ball=2} -> Ply1_ForeHandR
			p95: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p96: ServeWide_in{ball=3} -> Ply1_BackHandR
			p97: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p98: Serve_err{ball=9} -> Ad_Ply2Serve_2nd}; 

Ad_Ply2Serve_2nd = pcase {                 //1st serve is out
			p99: ServeT_in{ball=2} -> Ply1_ForeHandR
			p100: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p101: ServeWide_in{ball=3} -> Ply1_BackHandR
			p102: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p103: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
Ply2_ForeHandR = ifa (turn == f_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
		  pcase {
			p104: FH_CrossCourt{ball = 1} -> Ply1_de_stroke
			p105: FH_DownLine { ball = 3} -> Ply1_ad_stroke
			p106: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p107: FH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p108: FH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
      			p109: FH_InsideOut{ ball = 3} -> Ply1_ad_stroke
			p110: FH_InsideIn{ball = 1} -> Ply1_de_stroke
			p111: FH_CrossCourt{ball = 1} -> Ply1_de_stroke
			p112: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p113: FH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p114: FH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};
      		 
Ply2_BackHandR = ifa (turn == f_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
			pcase {
			p115: BH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
			p116: BH_InsideIn{ball = 3} -> Ply1_ad_stroke
			p117: BH_InsideOut{ ball = 1} -> Ply1_de_stroke
			p118: BH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p119: BH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p120: BH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p121: BH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
			p122: BH_DownLine{ ball = 1} -> Ply1_de_stroke
			p123: BH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p124: BH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p125: BH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt			
      		 }};

// deuce stroke is when player2 hit position is 6
Ply2_de_stroke = pcase {
			p126: FH_Crosscourt{ball = 1} -> Ply1_de_stroke
			p127: FH_Crosscourt{ball = 1} -> Ply1_de_smash
			p128: FH_Downline{ ball = 3} -> Ply1_ad_stroke
			p129: FH_Downline{ ball = 3} -> Ply1_ad_smash
			p130: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p131: FH_DownMid{ ball = 2} -> Ply1_mid_smash
			p132: BH_InsideIn{ball = 3} -> Ply1_ad_stroke
			p133: BH_InsideIn{ball = 3} -> Ply1_ad_smash
			p134: BH_InsideOut{ ball = 1} -> Ply1_de_stroke
			p135: BH_InsideOut{ ball = 1} -> Ply1_de_smash
			p136: BH_DownMid{ball = 2} -> Ply1_mid_stroke
			p137: BH_DownMid{ball = 2} -> Ply1_mid_smash
			p138: Winner{ ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p139: Error { ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// mid stroke is when player2 hit position is 5
Ply2_mid_stroke = noMove -> pcase{
			p140: FH_InsideOut { ball = 3} -> Ply1_ad_stroke
			p141: FH_InsideOut { ball = 3} -> Ply1_ad_smash
			p142: FH_Crosscourt{ball = 1} -> Ply1_de_stroke
			p143: FH_Crosscourt{ball = 1} -> Ply1_de_smash
			p144: FH_DownMid { ball = 2 } -> Ply1_mid_stroke
			p145: FH_DownMid { ball = 2 } -> Ply1_mid_smash
			p146: BH_InsideOut { ball = 1} -> Ply1_de_stroke
			p147: BH_InsideOut { ball = 1} -> Ply1_de_smash
			p148: BH_Crosscourt { ball = 3} -> Ply1_ad_stroke
			p149: BH_Crosscourt { ball = 3} -> Ply1_ad_smash
			p150: BH_DownMid { ball = 2} -> Ply1_mid_stroke
			p151: BH_DownMid { ball = 2} -> Ply1_mid_smash
			p152: Winner{ ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p153: Error { ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// ad stroke is when player 2 hit position is 4
Ply2_ad_stroke = pcase{
			p154: FH_InsideOut { ball = 3} -> Ply1_ad_stroke
			p155: FH_InsideOut { ball = 3} -> Ply1_ad_smash
			p156: FH_InsideIn { ball = 1} -> Ply1_de_stroke
			p157: FH_InsideIn { ball = 1} -> Ply1_de_smash
			p158: FH_DownMid { ball = 2} -> Ply1_mid_stroke
			p159: FH_DownMid { ball = 2} -> Ply1_mid_smash
			p160: BH_Crosscourt { ball = 3} -> Ply1_ad_stroke
			p161: BH_Crosscourt { ball = 3} -> Ply1_ad_smash
			p162: BH_Downline { ball = 1} -> Ply1_de_stroke
			p163: BH_Downline { ball = 1} -> Ply1_de_smash
			p164: BH_DownMid { ball = 2 } -> Ply1_mid_stroke
			p165: BH_DownMid { ball = 2 } -> Ply1_mid_smash
			p166: Winner{ ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p167: Error { ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// deuce smash is when player 1 hit position is 1
Ply1_de_smash = pcase{
			p168: FH_Smash_Crosscourt{ball=6} -> Ply2_de_stroke 
			p169: FH_Smash_Crosscourt{ball=6} -> Ply2_de_smash
			p170: FH_Smash_Downline{ball=4} -> Ply2_ad_stroke 
			p171: FH_Smash_Downline{ball=4} -> Ply2_ad_smash
			p172: FH_Smash_DownMid{ball=5} -> Ply2_mid_stroke 
			p173: FH_Smash_DownMid{ball=5} -> Ply2_mid_smash
			p174: BH_Smash_InsideIn{ball=4} -> Ply2_ad_stroke 
			p175: BH_Smash_InsideIn{ball=4} -> Ply2_ad_smash
			p176: BH_Smash_InsideOut{ball=6} -> Ply2_de_stroke 
			p177: BH_Smash_InsideOut{ball=6} -> Ply2_de_smash
			p178: BH_Smash_DownMid{ball=5} -> Ply2_mid_stroke
			p179: BH_Smash_DownMid{ball=5} -> Ply2_mid_smash
			p180: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p181: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// mid smash is when player 1 hit position is 2
Ply1_mid_smash = pcase{
			p182: FH_Smash_InsideOut{ball=4} -> Ply2_ad_stroke
			p183: FH_Smash_InsideOut{ball=4} -> Ply2_ad_smash
			p184: FH_Smash_Crosscourt{ball=6} -> Ply2_de_stroke
			p185: FH_Smash_Crosscourt{ball=6} -> Ply2_de_smash
			p186: FH_Smash_DownMid{ball=5} -> Ply2_mid_stroke
			p187: FH_Smash_DownMid{ball=5} -> Ply2_mid_smash
			p188: BH_Smash_InsideOut{ball=6} -> Ply2_de_stroke
			p189: BH_Smash_InsideOut{ball=6} -> Ply2_de_smash
			p190: BH_Smash_Crosscourt{ball=4} -> Ply2_ad_stroke
			p191: BH_Smash_Crosscourt{ball=4} -> Ply2_ad_smash
			p192: BH_Smash_DownMid{ball=5} -> Ply2_mid_stroke
			p193: BH_Smash_DownMid{ball=5} -> Ply2_mid_smash
			p194: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p195: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// ad smash is when player 1 hit position is 3
Ply1_ad_smash = pcase{
			p196: FH_Smash_InsideOut{ball=4} -> Ply2_ad_stroke
			p197: FH_Smash_InsideOut{ball=4} -> Ply2_ad_smash
			p198: FH_Smash_InsideIn{ball=6} -> Ply2_de_stroke
			p199: FH_Smash_InsideIn{ball=6} -> Ply2_de_smash
			p200: FH_Smash_DownMid{ball=5} -> Ply2_mid_stroke
			p201: FH_Smash_DownMid{ball=5} -> Ply2_mid_smash
			p202: BH_Smash_Crosscourt{ball=4} -> Ply2_ad_stroke
			p203: BH_Smash_Crosscourt{ball=4} -> Ply2_ad_smash
			p204: BH_Smash_Downline{ball=6} -> Ply2_de_stroke
			p205: BH_Smash_Downline{ball=6} -> Ply2_de_smash
			p206: BH_Smash_DownMid{ball=5} -> Ply2_mid_stroke
			p207: BH_Smash_DownMid{ball=5} -> Ply2_mid_smash
			p208: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p209: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};

// deuce smash is when player2 hit position is 6
Ply2_de_smash = pcase { 
			p210: FH_Smash_Crosscourt{ball=1} -> Ply1_de_stroke
			p211: FH_Smash_Crosscourt{ball=1} -> Ply1_de_smash
			p212: FH_Smash_Downline{ball=3} -> Ply1_ad_stroke
			p213: FH_Smash_Downline{ball=3} -> Ply1_ad_smash
			p214: FH_Smash_DownMid{ball=2} -> Ply1_mid_stroke
			p215: FH_Smash_DownMid{ball=2} -> Ply1_mid_smash
			p216: BH_Smash_InsideIn{ball=3} -> Ply1_ad_stroke
			p217: BH_Smash_InsideIn{ball=3} -> Ply1_ad_smash
			p218: BH_Smash_InsideOut{ball=1} -> Ply1_de_stroke
			p219: BH_Smash_InsideOut{ball=1} -> Ply1_de_smash
			p220: BH_Smash_DownMid{ball=2} -> Ply1_mid_stroke
			p221: BH_Smash_DownMid{ball=2} -> Ply1_mid_smash
			p222: Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p223: Error {ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// mid smash is when player2 hit position is 5
Ply2_mid_smash = noMove -> pcase{
			p224: FH_Smash_InsideOut{ball=3} -> Ply1_ad_stroke
			p225: FH_Smash_InsideOut{ball=3} -> Ply1_ad_smash
			p226: FH_Smash_Crosscourt{ball=1} -> Ply1_de_stroke
			p227: FH_Smash_Crosscourt{ball=1} -> Ply1_de_smash
			p228: FH_Smash_DownMid{ball=2} -> Ply1_mid_stroke
			p229: FH_Smash_DownMid{ball=2} -> Ply1_mid_smash
			p230: BH_Smash_InsideOut{ball=1} -> Ply1_de_stroke
			p231: BH_Smash_InsideOut{ball=1} -> Ply1_de_smash
			p232: BH_Smash_Crosscourt{ball=3} -> Ply1_ad_stroke
			p233: BH_Smash_Crosscourt{ball=3} -> Ply1_ad_smash
			p234: BH_Smash_DownMid{ball=2} -> Ply1_mid_stroke
			p235: BH_Smash_DownMid{ball=2} -> Ply1_mid_smash
			p236: Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p237: Error{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// ad smash is when player 2 hit position is 4
Ply2_ad_smash = pcase{
			p238: FH_Smash_InsideOut{ball=3} -> Ply1_ad_stroke
			p239: FH_Smash_InsideOut{ball=3} -> Ply1_ad_smash
			p240: FH_Smash_InsideIn{ball=1} -> Ply1_de_stroke
			p241: FH_Smash_InsideIn{ball=1} -> Ply1_de_smash
			p242: FH_Smash_DownMid{ball=2} -> Ply1_mid_stroke
			p243: FH_Smash_DownMid{ball=2} -> Ply1_mid_smash
			p244: BH_Smash_Crosscourt{ball=3} -> Ply1_ad_stroke
			p245: BH_Smash_Crosscourt{ball=3} -> Ply1_ad_smash
			p246: BH_Smash_Downline{ball=1} -> Ply1_de_stroke
			p247: BH_Smash_Downline{ball=1} -> Ply1_de_smash
			p248: BH_Smash_DownMid{ball=2} -> Ply1_mid_stroke
			p249: BH_Smash_DownMid{ball=2} -> Ply1_mid_smash
			p250: Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p251: Error{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};


#define player1Win won == player1;
#assert TieBreakGame reaches player1Win with prob;
