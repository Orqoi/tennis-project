TieBreakGame = WhoServe1st; (Player1Serve [] Player2Serve);
WhoServe1st = []i:{f_de_ct,n_de_ct}@ TossCoin{turn = i} -> Skip;
Player1Serve = [won == na && turn == f_de_ct ]FedReady_DeCt -> De_Ply1Serve [] [won == na && turn == f_ad_ct] FedReady_AdCt -> Ad_Ply1Serve;
Player2Serve = [won == na && turn == n_de_ct]NadReady_DeCt -> De_Ply2Serve [] [ won == na && turn == n_ad_ct] NadReady_AdCt -> Ad_Ply2Serve;
NextPt = Player1Serve [] Player2Serve [] ([won != na] GameOver -> Skip);

De_Ply1Serve = pcase {                             
			p0: ServeT_in{ball=5} -> Ply2_BackHandR  
			p1: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p2: ServeWide_in{ball=6} -> Ply2_ForeHandR 
			p3: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p4: Serve_err{ball=9} -> De_Ply1Serve_2nd}; 

De_Ply1Serve_2nd = pcase {                 //1st serve is out
			p5: ServeT_in{ball=5} -> Ply2_BackHandR  
			p6: ServeBody_in{ball=6} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p7: ServeWide_in{ball=6} -> Ply2_ForeHandR 
			p8: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p9: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };

Ad_Ply1Serve = pcase {
			p10: ServeT_in{ball=5} -> Ply2_ForeHandR  
			p11: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p12: ServeWide_in{ball=4} -> Ply2_BackHandR
			p13: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p14: Serve_err{ball=9} -> Ad_Ply1Serve_2nd}; 

Ad_Ply1Serve_2nd = pcase {                 //1st serve is out
			p15: ServeT_in{ball=5} -> Ply2_ForeHandR  
			p16: ServeBody_in{ball=4} -> (Ply2_BackHandR [] Ply2_ForeHandR)
			p17: ServeWide_in{ball=4} -> Ply2_BackHandR
			p18: Serve_winner{ball=9} -> FWinner{fscore++; if (fscore == points) {won = player1} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
			p19: Serve_err{ball=9} -> Fdoublefault{nscore++; if (nscore == points) {won = player2} 
      		                                                        else { turn = (turn+1)%4} }-> NextPt
     		 };    
     		 
Ply1_ForeHandR = ifa (turn == n_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
		 pcase {
			p20: FH_CrossCourt{ball=6} -> Ply2_de_stroke
			p21: FH_DownLine{ball=4} -> Ply2_ad_stroke
			p22: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p23: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p24: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p25: FH_InsideOut{ball =4} -> Ply2_ad_stroke
			p26: FH_InsideIn{ball=6} -> Ply2_de_stroke
			p27: FH_CrossCourt{ball=6} -> Ply2_de_stroke
			p28: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p29: FH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p30: FH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

Ply1_BackHandR = ifa (turn == n_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
		 pcase {
			p31: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
			p32: BH_InsideIn{ball=4} -> Ply2_ad_stroke
			p33: BH_InsideOut{ball=6} -> Ply2_de_stroke
			p34: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p35: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p36: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p37: BH_CrossCourt{ball=4} -> Ply2_ad_stroke
			p38: BH_DownLine{ball=6} -> Ply2_de_stroke
			p39: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p40: BH_Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p41: BH_Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};

// deuce stroke is when player1 hit position is 1
Ply1_de_stroke = pcase{
			p42: FH_Crosscourt{ball=6} -> Ply2_de_smash
			p43: FH_Crosscourt{ball=6} -> Ply2_de_lob
			p44: FH_Crosscourt{ball=6} -> Ply2_de_stroke
			p45: FH_Downline{ball=4} -> Ply2_ad_smash
			p46: FH_Downline{ball=4} -> Ply2_ad_lob
			p47: FH_Downline{ball=4} -> Ply2_ad_stroke
			p48: FH_DownMid{ball=5} -> Ply2_mid_smash
			p49: FH_DownMid{ball=5} -> Ply2_mid_lob
			p50: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p51: BH_InsideIn{ball=4} -> Ply2_ad_smash
			p52: BH_InsideIn{ball=4} -> Ply2_ad_lob
			p53: BH_InsideIn{ball=4} -> Ply2_ad_stroke
			p54: BH_InsideOut{ball=6} -> Ply2_de_smash
			p55: BH_InsideOut{ball=6} -> Ply2_de_lob
			p56: BH_InsideOut{ball=6} -> Ply2_de_stroke
			p57: BH_DownMid{ball=5} -> Ply2_mid_smash
			p58: BH_DownMid{ball=5} -> Ply2_mid_lob
			p59: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p60: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p61: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};
	
// mid stroke is when player1 hit position is 2
Ply1_mid_stroke = pcase{
			p62: FH_InsideOut{ball=4} -> Ply2_ad_smash
			p63: FH_InsideOut{ball=4} -> Ply2_ad_lob
			p64: FH_InsideOut{ball=4} -> Ply2_ad_stroke
			p65: FH_Crosscourt{ball=6} -> Ply2_de_smash
			p66: FH_Crosscourt{ball=6} -> Ply2_de_lob
			p67: FH_Crosscourt{ball=6} -> Ply2_de_stroke
			p68: FH_DownMid{ball=5} -> Ply2_mid_smash
			p69: FH_DownMid{ball=5} -> Ply2_mid_lob
			p70: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p71: BH_InsideOut{ball=6} -> Ply2_de_smash
			p72: BH_InsideOut{ball=6} -> Ply2_de_lob
			p73: BH_InsideOut{ball=6} -> Ply2_de_stroke
			p74: BH_Crosscourt{ball=4} -> Ply2_ad_smash
			p75: BH_Crosscourt{ball=4} -> Ply2_ad_lob
			p76: BH_Crosscourt{ball=4} -> Ply2_ad_stroke
			p77: BH_DownMid{ball=5} -> Ply2_mid_smash
			p78: BH_DownMid{ball=5} -> Ply2_mid_lob
			p79: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p80: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p81: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt    
	};


// ad stroke is when player1 hit position is 3
Ply1_ad_stroke = pcase{
			p82: FH_InsideOut{ball=4} -> Ply2_ad_smash
			p83: FH_InsideOut{ball=4} -> Ply2_ad_lob
			p84: FH_InsideOut{ball=4} -> Ply2_ad_stroke
			p85: FH_InsideIn{ball=6} -> Ply2_de_smash
			p86: FH_InsideIn{ball=6} -> Ply2_de_lob
			p87: FH_InsideIn{ball=6} -> Ply2_de_stroke
			p88: FH_DownMid{ball=5} -> Ply2_mid_smash
			p89: FH_DownMid{ball=5} -> Ply2_mid_lob
			p90: FH_DownMid{ball=5} -> Ply2_mid_stroke
			p91: BH_Crosscourt{ball=4} -> Ply2_ad_smash
			p92: BH_Crosscourt{ball=4} -> Ply2_ad_lob
			p93: BH_Crosscourt{ball=4} -> Ply2_ad_stroke
			p94: BH_Downline{ball=6} -> Ply2_de_smash
			p95: BH_Downline{ball=6} -> Ply2_de_lob
			p96: BH_Downline{ball=6} -> Ply2_de_stroke
			p97: BH_DownMid{ball=5} -> Ply2_mid_smash
			p98: BH_DownMid{ball=5} -> Ply2_mid_lob
			p99: BH_DownMid{ball=5} -> Ply2_mid_stroke
			p100: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p101: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
	};


De_Ply2Serve = pcase {
			p102: ServeT_in{ball=2} -> Ply1_BackHandR
			p103: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p104: ServeWide_in{ball=1} -> Ply1_ForeHandR
			p105: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p106: Serve_err{ball=9} -> De_Ply2Serve_2nd}; 

De_Ply2Serve_2nd = pcase {                 //1st serve is out
			p107: ServeT_in{ball=2} -> Ply1_BackHandR
			p108: ServeBody_in{ball=1} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p109: ServeWide_in{ball=1} -> Ply1_ForeHandR
			p110: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p111: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
Ad_Ply2Serve = pcase {
			p112: ServeT_in{ball=2} -> Ply1_ForeHandR
			p113: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p114: ServeWide_in{ball=3} -> Ply1_BackHandR
			p115: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p116: Serve_err{ball=9} -> Ad_Ply2Serve_2nd}; 

Ad_Ply2Serve_2nd = pcase {                 //1st serve is out
			p117: ServeT_in{ball=2} -> Ply1_ForeHandR
			p118: ServeBody_in{ball=3} -> (Ply1_ForeHandR [] Ply1_BackHandR)
			p119: ServeWide_in{ball=3} -> Ply1_BackHandR
			p120: Serve_Winner{ball=9} -> NWinner{nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p121: Serve_err{ball=9} -> Ndoublefault{fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
     		 };
     		 
Ply2_ForeHandR = ifa (turn == f_de_ct) {    // Player2 backhand return to Player1 serve from the deuce court side
		  pcase {
			p122: FH_CrossCourt{ball = 1} -> Ply1_de_stroke
			p123: FH_DownLine { ball = 3} -> Ply1_ad_stroke
			p124: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p125: FH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p126: FH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
      		p127: FH_InsideOut{ ball = 3} -> Ply1_ad_stroke
			p128: FH_InsideIn{ball = 1} -> Ply1_de_stroke
			p129: FH_CrossCourt{ball = 1} -> Ply1_de_stroke
			p130: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p131: FH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p132: FH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }};
      		 
Ply2_BackHandR = ifa (turn == f_de_ct) {    // Player2 forehand return to Player1 serve from the deuce court side
			pcase {
			p133: BH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
			p134: BH_InsideIn{ball = 3} -> Ply1_ad_stroke
			p135: BH_InsideOut{ ball = 1} -> Ply1_de_stroke
			p136: BH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p137: BH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p138: BH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
      		 }}
      		 else {
      		pcase {
			p139: BH_CrossCourt{ ball = 3} -> Ply1_ad_stroke
			p140: BH_DownLine{ ball = 1} -> Ply1_de_stroke
			p141: BH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p142: BH_Winner{ball=9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p143: BH_Error{ ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt			
      		 }};

// deuce stroke is when player2 hit position is 6
Ply2_de_stroke = pcase {
			p144: FH_Crosscourt{ball = 1} -> Ply1_de_stroke
			p145: FH_Crosscourt{ball = 1} -> Ply1_de_smash
			p146: FH_Downline{ ball = 3} -> Ply1_ad_stroke
			p147: FH_Downline{ ball = 3} -> Ply1_ad_smash
			p148: FH_DownMid{ ball = 2} -> Ply1_mid_stroke
			p149: FH_DownMid{ ball = 2} -> Ply1_mid_smash
			p150: BH_InsideIn{ball = 3} -> Ply1_ad_stroke
			p151: BH_InsideIn{ball = 3} -> Ply1_ad_smash
			p152: BH_InsideOut{ ball = 1} -> Ply1_de_stroke
			p153: BH_InsideOut{ ball = 1} -> Ply1_de_smash
			p154: BH_DownMid{ball = 2} -> Ply1_mid_stroke
			p155: BH_DownMid{ball = 2} -> Ply1_mid_smash
			p156: Winner{ ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p157: Error { ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// mid stroke is when player2 hit position is 5
Ply2_mid_stroke = pcase{
			p158: FH_InsideOut { ball = 3} -> Ply1_ad_stroke
			p159: FH_InsideOut { ball = 3} -> Ply1_ad_smash
			p160: FH_Crosscourt{ball = 1} -> Ply1_de_stroke
			p161: FH_Crosscourt{ball = 1} -> Ply1_de_smash
			p162: FH_DownMid { ball = 2 } -> Ply1_mid_stroke
			p163: FH_DownMid { ball = 2 } -> Ply1_mid_smash
			p164: BH_InsideOut { ball = 1} -> Ply1_de_stroke
			p165: BH_InsideOut { ball = 1} -> Ply1_de_smash
			p166: BH_Crosscourt { ball = 3} -> Ply1_ad_stroke
			p167: BH_Crosscourt { ball = 3} -> Ply1_ad_smash
			p168: BH_DownMid { ball = 2} -> Ply1_mid_stroke
			p169: BH_DownMid { ball = 2} -> Ply1_mid_smash
			p170: Winner{ ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p171: Error { ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// ad stroke is when player 2 hit position is 4
Ply2_ad_stroke = pcase{
			p172: FH_InsideOut { ball = 3} -> Ply1_ad_stroke
			p173: FH_InsideOut { ball = 3} -> Ply1_ad_smash
			p174: FH_InsideIn { ball = 1} -> Ply1_de_stroke
			p175: FH_InsideIn { ball = 1} -> Ply1_de_smash
			p176: FH_DownMid { ball = 2} -> Ply1_mid_stroke
			p177: FH_DownMid { ball = 2} -> Ply1_mid_smash
			p178: BH_Crosscourt { ball = 3} -> Ply1_ad_stroke
			p179: BH_Crosscourt { ball = 3} -> Ply1_ad_smash
			p180: BH_Downline { ball = 1} -> Ply1_de_stroke
			p181: BH_Downline { ball = 1} -> Ply1_de_smash
			p182: BH_DownMid { ball = 2 } -> Ply1_mid_stroke
			p183: BH_DownMid { ball = 2 } -> Ply1_mid_smash
			p184: Winner{ ball = 9} -> {nscore++; if (nscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p185: Error { ball = 9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt 
	};

// de smash is when player 1 hit position is 1
Refer to 5 6 and 9
Ply1_de_smash = pcase {
			p186: FH_Smash{ball=4} -> Ply2_ad_slice
			p187: FH_Smash{ball=4} -> Ply2_ad_lob
			p188: FH_Smash{ball=6} -> Ply2_de_slice
			p189: FH_Smash{ball=6} -> Ply2_de_lob
			p190: FH_Smash{ball=5} -> Ply2_mid_slice
			p191: FH_Smash{ball=5} -> Ply2_mid_lob
			p192: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p193: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// mid smash is when player 1 hit position is 2
Refer to 2, 4, 8, 10, 13, 15
Ply1_mid_smash = pcase {
			p194: FH_Smash{ball=4} -> Ply2_ad_slice
			p195: FH_Smash{ball=4} -> Ply2_ad_lob
			p196: FH_Smash{ball=5} -> Ply2_mid_slice
			p197: FH_Smash{ball=5} -> Ply2_mid_lob
			p198: FH_Smash{ball=6} -> Ply2_de_slice
			p199: FH_Smash{ball=6} -> Ply2_de_lob
			p200: BH_Smash{ball=4} -> Ply2_ad_slice
			p201: BH_Smash{ball=4} -> Ply2_ad_lob
			p202: BH_Smash{ball=6} -> Ply2_de_slice
			p203: BH_Smash{ball=6} -> Ply2_de_lob
			p204: BH_Smash{ball=5} -> Ply2_mid_slice
			p205: BH_Smash{ball=5} -> Ply2_mid_lob
			p206: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p207: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// ad smash is when player 1 hit position is at 3
REFER to 1,3,7,11,12,14
Ply1_ad_smash = pcase {
			p208: FH_Smash{ball=6} -> Ply2_de_slice
			p209: FH_Smash{ball=6} -> Ply2_de_lob
			p210: FH_Smash{ball=5} -> Ply2_mid_slice
			p211: FH_Smash{ball=5} -> Ply2_mid_lob
			p212: FH_Smash{ball=4} -> Ply2_ad_slice
			p213: FH_Smash{ball=4} -> Ply2_ad_lob
			p214: BH_Smash{ball=4} -> Ply2_ad_slice
			p215: BH_Smash{ball=4} -> Ply2_ad_lob
			p216: BH_Smash{ball=5} -> Ply2_mid_slice
			p217: BH_Smash{ball=5} -> Ply2_mid_lob
			p218: BH_Smash{ball=6} -> Ply2_de_slice
			p219: BH_Smash{ball=6} -> Ply2_de_lob
			p220: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p221: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// de smash is when player 2 hit position is at 6
Ply2_de_smash = pcase{
			p222: FH_Smash{ball=3} -> Ply1_ad_slice
			p223: FH_Smash{ball=3} -> Ply1_ad_lob
			p224: FH_Smash{ball=1} -> Ply1_de_slice
			p225:FH_Smash{ball=1} -> Ply1_de_lob
			p226: FH_Smash{ball=2} -> Ply1_mid_slice
			p227: FH_Smash{ball=2} -> Ply1_mid_lob
			p228: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p229: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// mid smash is when player 2 hit position is at 5
Ply2_mid_smash = pcase{
			p230: FH_Smash{ball=3} -> Ply1_ad_slice
			p231: FH_Smash{ball=3} -> Ply1_ad_lob
			p232: FH_Smash{ball=2} -> Ply1_mid_slice
			p233: FH_Smash{ball=2} -> Ply1_mid_lob
			p234: FH_Smash{ball=1} -> Ply1_de_slice
			p235: FH_Smash{ball=1} -> Ply1_de_lob
			p236: BH_Smash{ball=3} -> Ply1_ad_slice
			p237: BH_Smash{ball=3} -> Ply1_ad_lob
			p238: BH_Smash{ball=1} -> Ply1_de_slice
			p239: BH_Smash{ball=1} -> Ply1_de_lob
			p240: BH_Smash{ball=2} -> Ply1_mid_slice
			p241: BH_Smash{ball=2} -> Ply1_mid_lob
			p242: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p243: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}


// ad smash is when player 2 hit position is at 4
Ply2_ad_smash = pcase{
			p244: FH_Smash{ball=1} -> Ply1_de_slice
			p245: FH_Smash{ball=1} -> Ply1_de_lob
			p246: FH_Smash{ball=2} -> Ply1_mid_slice
			p247: FH_Smash{ball=2} -> Ply1_mid_lob
			p248: FH_Smash{ball=3} -> Ply1_ad_slice
			p249: FH_Smash{ball=3} -> Ply1_ad_lob
			p250: BH_Smash{ball=3} -> Ply1_ad_slice
			p251: BH_Smash{ball=3} -> Ply1_ad_lob
			p252: BH_Smash{ball=2} -> Ply1_mid_slice
			p253: BH_Smash{ball=2} -> Ply1_mid_lob
			p254: BH_Smash{ball=1} -> Ply1_de_slice
			p255: BH_Smash{ball=1} -> Ply1_de_lob
			p256: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p257: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// de lob is when player 1 hit position is at 1
Ply1_de_lob = pcase{
			p258: FH_Lob{ball=6} -> Ply2_de_smash
			p259: FH_Lob{ball=6} -> Ply2_de_lob
			p260: FH_Lob{ball=6} -> Ply2_de_stroke
			p261: FH_Lob{ball=5} -> Ply2_mid_smash
			p262: FH_Lob{ball=5} -> Ply2_mid_lob
			p263: FH_Lob{ball=5} -> Ply2_mid_stroke
			p264: FH_Lob{ball=4} -> Ply2_ad_smash
			p265: FH_Lob{ball=4} -> Ply2_ad_lob
			p266: FH_Lob{ball=4} -> Ply2_ad_stroke
			p267: BH_Lob{ball=6} -> Ply2_de_smash
			p268: BH_Lob{ball=6} -> Ply2_de_stroke
			p269: BH_Lob{ball=5} -> Ply2_mid_smash
			p270: BH_Lob{ball=5} -> Ply2_mid_lob
			p271: BH_Lob{ball=5} -> Ply2_mid_stroke
			p272: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p273: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
			
}

// mid lob is when player 1 hit position is at 2
Ply1_mid_lob = pcase{
			p274: FH_Lob{ball=5} -> Ply2_mid_smash
			p275: FH_Lob{ball=5} -> Ply2_mid_lob
			p276: FH_Lob{ball=5} -> Ply2_mid_stroke
			p277: FH_Lob{ball=6} -> Ply2_de_smash
			p278: FH_Lob{ball=6} -> Ply2_de_lob
			p279: FH_Lob{ball=6} -> Ply2_de_stroke
			p280: FH_Lob{ball=4} -> Ply2_ad_smash
			p281: FH_Lob{ball=4} -> Ply2_ad_lob
			p282: FH_Lob{ball=4} -> Ply2_ad_stroke
			p283: BH_Lob{ball=6} -> Ply2_de_smash
			p284: BH_Lob{ball=6} -> Ply2_de_lob
			p285: BH_Lob{ball=6} -> Ply2_de_stroke
			p286: BH_Lob{ball=5} -> Ply2_mid_smash
			p287: BH_Lob{ball=5} -> Ply2_mid_lob
			p288: BH_Lob{ball=5} -> Ply2_mid_stroke
			p289: BH_Lob{ball=4} -> Ply2_ad_smash
			p290: BH_Lob{ball=4} -> Ply2_ad_lob
			p291: BH_Lob{ball=4} -> Ply2_ad_stroke
			p292: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p293: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// ad lob is when player 1 hit position is at 3
Ply1_ad_lob = pcase{
			p294: FH_Lob{ball=6} -> Ply2_de_smash
			p295: FH_Lob{ball=6} -> Ply2_de_stroke
			p296: FH_Lob{ball=5} -> Ply2_mid_smash
			p297: FH_Lob{ball=5} -> Ply2_mid_lob
			p298: FH_Lob{ball=5} -> Ply2_mid_stroke
			p299: FH_Lob{ball=4} -> Ply2_ad_smash
			p300: FH_Lob{ball=4} -> Ply2_ad_lob
			p301: FH_Lob{ball=4} -> Ply2_ad_stroke
			p302: BH_Lob{ball=6} -> Ply2_de_smash
			p303: BH_Lob{ball=6} -> Ply2_de_lob
			p304: BH_Lob{ball=6} -> Ply2_de_stroke
			p305: BH_Lob{ball=4} -> Ply2_ad_smash
			p306: BH_Lob{ball=4} -> Ply2_ad_lob
			p307: BH_Lob{ball=4} -> Ply2_ad_stroke
			p308: BH_Lob{ball=5} -> Ply2_mid_smash
			p309: BH_Lob{ball=5} -> Ply2_mid_lob
			p310: BH_Lob{ball=5} -> Ply2_mid_stroke
			p312: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player1} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p313: Error{ball=9} -> {nscore++; if (nscore == points) {won = player2}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// de lob is when player 2 hit position is at 6
Ply2_de_lob = pcase{
			p314: FH_Lob{ball=1} -> Ply1_de_smash
			p315: FH_Lob{ball=1} -> Ply1_de_lob
			p316: FH_Lob{ball=1} -> Ply1_de_stroke
			p317: FH_Lob{ball=2} -> Ply1_mid_smash
			p318: FH_Lob{ball=2} -> Ply1_mid_lob
			p319: FH_Lob{ball=2} -> Ply1_mid_stroke
			p320: FH_Lob{ball=3} -> Ply1_ad_smash
			p321: FH_Lob{ball=3} -> Ply1_ad_lob
			p322: FH_Lob{ball=3} -> Ply1_ad_stroke
			p323: BH_Lob{ball=1} -> Ply1_de_smash
			p324: BH_Lob{ball=1} -> Ply1_de_stroke
			p325: BH_Lob{ball=2} -> Ply1_mid_smash
			p326: BH_Lob{ball=2} -> Ply1_mid_lob
			p327: BH_Lob{ball=2} -> Ply1_mid_stroke
			p328: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p329: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// mid lob is when player 2 hit position is at 5
Ply2_mid_lob = pcase{
			p330: FH_Lob{ball=2} -> Ply1_mid_smash
			p331: FH_Lob{ball=2} -> Ply1_mid_lob
			p332: FH_Lob{ball=2} -> Ply1_mid_stroke
			p333: FH_Lob{ball=1} -> Ply1_de_smash
			p334: FH_Lob{ball=1} -> Ply1_de_lob
			p335: FH_Lob{ball=1} -> Ply1_de_stroke
			p336: FH_Lob{ball=3} -> Ply1_ad_smash
			p337: FH_Lob{ball=3} -> Ply1_ad_lob
			p338: FH_Lob{ball=3} -> Ply1_ad_stroke
			p339: BH_Lob{ball=1} -> Ply1_de_smash
			p340: BH_Lob{ball=1} -> Ply1_de_lob
			p341: BH_Lob{ball=1} -> Ply1_de_stroke
			p342: BH_Lob{ball=2} -> Ply1_mid_smash
			p343: BH_Lob{ball=2} -> Ply1_mid_lob
			p344: BH_Lob{ball=2} -> Ply1_mid_stroke
			p345: BH_Lob{ball=3} -> Ply1_ad_smash
			p346: BH_Lob{ball=3} -> Ply1_ad_lob
			p347: BH_Lob{ball=3} -> Ply1_ad_stroke
			p348: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p349: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}

// ad lob is when player 2 hit position is at 4
Ply2_ad_lob = pcase{
			p350: FH_Lob{ball=1} -> Ply1_de_smash
			p351: FH_Lob{ball=1} -> Ply1_de_stroke
			p352: FH_Lob{ball=2} -> Ply1_mid_smash
			p353: FH_Lob{ball=2} -> Ply1_mid_lob
			p354: FH_Lob{ball=2} -> Ply1_mid_stroke
			p355: FH_Lob{ball=3} -> Ply1_ad_smash
			p356: FH_Lob{ball=3} -> Ply1_ad_lob
			p357: FH_Lob{ball=3} -> Ply1_ad_stroke
			p358: BH_Lob{ball=1} -> Ply1_de_smash
			p359: BH_Lob{ball=1} -> Ply1_de_lob
			p360: BH_Lob{ball=1} -> Ply1_de_stroke
			p361: BH_Lob{ball=3} -> Ply1_ad_smash
			p362: BH_Lob{ball=3} -> Ply1_ad_lob
			p363: BH_Lob{ball=3} -> Ply1_ad_stroke
			p364: BH_Lob{ball=2} -> Ply1_mid_smash
			p365: BH_Lob{ball=2} -> Ply1_mid_lob
			p366: BH_Lob{ball=2} -> Ply1_mid_stroke
			p367: Winner{ball=9} -> {fscore++; if (fscore == points) {won = player2} 
      		                                                     else { turn = (turn+1)%4} }-> NextPt
			p368: Error{ball=9} -> {nscore++; if (nscore == points) {won = player1}
      		                                                     else { turn = (turn+1)%4} }-> NextPt  
}



#define player1Win won == player1;
#assert TieBreakGame reaches player1Win with prob;
